# Ruta: ./docker-compose.yml

services:
  db:
    image: postgres:14
    container_name: django-cron-jobs-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: django-cron-jobs-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  web:
    build: .
    container_name: django-cron-jobs-web
    entrypoint: ["/app/entrypoint.sh"]
    command: ["gunicorn", "--bind", ":8000", "phs_main_django.wsgi:application"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  celery_worker:
    build: .
    container_name: django-cron-jobs-celery_worker
    entrypoint: ["/app/entrypoint.sh"]
    command: ["celery", "-A", "phs_main_django", "worker", "--loglevel=info"]
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  celery_beat:
    build: .
    container_name: django-cron-jobs-celery_beat
    entrypoint: ["/app/entrypoint.sh"]
    command: ["celery", "-A", "phs_main_django", "beat", "--loglevel=info"]
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

volumes:
  postgres_data:
